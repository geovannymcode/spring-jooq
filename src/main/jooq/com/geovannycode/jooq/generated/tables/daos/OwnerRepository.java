/*
 * This file is generated by jOOQ.
 */
package com.geovannycode.jooq.generated.tables.daos;


import com.geovannycode.jooq.generated.tables.Owner;
import com.geovannycode.jooq.generated.tables.pojos.JooqOwner;
import com.geovannycode.jooq.generated.tables.records.OwnerRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OwnerRepository extends DAOImpl<OwnerRecord, JooqOwner, Long> {

    /**
     * Create a new OwnerRepository without any configuration
     */
    public OwnerRepository() {
        super(Owner.OWNER, JooqOwner.class);
    }

    /**
     * Create a new OwnerRepository with an attached configuration
     */
    @Autowired
    public OwnerRepository(Configuration configuration) {
        super(Owner.OWNER, JooqOwner.class, configuration);
    }

    @Override
    public Long getId(JooqOwner object) {
        return object.getOwnerId();
    }

    /**
     * Fetch records that have <code>owner_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqOwner> fetchRangeOfOwnerId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Owner.OWNER.OWNER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>owner_id IN (values)</code>
     */
    public List<JooqOwner> fetchByOwnerId(Long... values) {
        return fetch(Owner.OWNER.OWNER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>owner_id = value</code>
     */
    public JooqOwner fetchOneByOwnerId(Long value) {
        return fetchOne(Owner.OWNER.OWNER_ID, value);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqOwner> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Owner.OWNER.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<JooqOwner> fetchByFirstName(String... values) {
        return fetch(Owner.OWNER.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqOwner> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Owner.OWNER.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<JooqOwner> fetchByLastName(String... values) {
        return fetch(Owner.OWNER.LAST_NAME, values);
    }
}
